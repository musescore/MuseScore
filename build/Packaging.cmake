##
## create package target
##

include (InstallRequiredSystemLibraries)

set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "MuseScore is a full featured WYSIWYG score editor")
set(CPACK_PACKAGE_VENDOR "MuseScore BVBA and Others")

set(CPACK_PACKAGE_VERSION_MAJOR "${MUSESCORE_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${MUSESCORE_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${MUSESCORE_VERSION_PATCH}")
set(CPACK_PACKAGE_VERSION_BUILD "${CMAKE_BUILD_NUMBER}")
set(CPACK_PACKAGE_VERSION "${MUSESCORE_VERSION_MAJOR}.${MUSESCORE_VERSION_MINOR}.${MUSESCORE_VERSION_PATCH}.${CPACK_PACKAGE_VERSION_BUILD}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "MuseScore ${MUSESCORE_VERSION_MAJOR}.${MUSESCORE_VERSION_MINOR}")

message("CPACK_PACKAGE_VERSION: ${CPACK_PACKAGE_VERSION}")

set(git_date_string "")
if (MUSESCORE_UNSTABLE)
    find_program(GIT_EXECUTABLE git PATHS ENV PATH)
    if (GIT_EXECUTABLE)
        execute_process(
            COMMAND "${GIT_EXECUTABLE}" log -1 --date=short --format=%cd
            WORKING_DIRECTORY "${PROJECT_SOURCE_DIR}"
            OUTPUT_VARIABLE git_date
            OUTPUT_STRIP_TRAILING_WHITESPACE)
    endif()
    if (git_date)
        string(REGEX REPLACE "-" "" git_date "${git_date}")
        set(git_date_string "~git${git_date}")
    endif()
endif (MUSESCORE_UNSTABLE)

if (MINGW OR MSVC)
    set(CPACK_PACKAGE_INSTALL_DIRECTORY ${MUSESCORE_NAME_VERSION})
    set(CPACK_PACKAGE_NAME ${MUSESCORE_NAME})
    set(MSCORE_EXECUTABLE_NAME ${MUSESCORE_NAME}${MUSESCORE_VERSION_MAJOR})

    # File types association:
    message(STATUS "[Packaging.cmake] PACKAGE_FILE_ASSOCIATION: ${MUE_ENABLE_FILE_ASSOCIATION}")
    if (MUE_ENABLE_FILE_ASSOCIATION)
        list(APPEND CPACK_WIX_CANDLE_EXTRA_FLAGS -dCPACK_WIX_FILE_ASSOCIATION=ON)
    else()
        list(APPEND CPACK_WIX_CANDLE_EXTRA_FLAGS -dCPACK_WIX_FILE_ASSOCIATION=OFF)
    endif()

    file(TO_CMAKE_PATH $ENV{PROGRAMFILES} PROGRAMFILES)
    set(CPACK_WIX_ROOT "${PROGRAMFILES}/WiX Toolset v3.11")
    set(CPACK_WIX_PRODUCT_GUID "00000000-0000-0000-0000-000000000000")
    message(STATUS "[Packaging.cmake] CPACK_WIX_PRODUCT_GUID: ${CPACK_WIX_PRODUCT_GUID}")
    set(CPACK_WIX_UPGRADE_GUID "11111111-1111-1111-1111-111111111111")
    message(STATUS "[Packaging.cmake] CPACK_WIX_UPGRADE_GUID: ${CPACK_WIX_UPGRADE_GUID}")
    set(CPACK_WIX_LICENSE_RTF  "${PROJECT_SOURCE_DIR}/build/packaging/LICENSE.rtf")
    set(CPACK_WIX_PRODUCT_ICON "${PROJECT_SOURCE_DIR}/share/icons/AppIcon/MS4_AppIcon.ico")
    set(CPACK_WIX_UI_BANNER "${PROJECT_SOURCE_DIR}/build/packaging/installer_banner_wix.png")
    set(CPACK_WIX_UI_DIALOG "${PROJECT_SOURCE_DIR}/build/packaging/installer_background_wix.png")
    set(CPACK_WIX_PROGRAM_MENU_FOLDER "${MUSESCORE_NAME_VERSION}")
    set(CPACK_CREATE_DESKTOP_LINKS "${MUSESCORE_NAME_VERSION}")
    set(CPACK_WIX_EXTENSIONS "WixUtilExtension")

    set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/build/packaging" ${CMAKE_MODULE_PATH}) # Use custom version of WIX.template.in
    set(CPACK_PACKAGE_EXECUTABLES   "${MSCORE_EXECUTABLE_NAME}" "${MUSESCORE_NAME_VERSION}") # exe name, label
    set(CPACK_CREATE_DESKTOP_LINKS "${MSCORE_EXECUTABLE_NAME}" "${MUSESCORE_NAME_VERSION}") #exe name, label

    set(CPACK_PACKAGE_FILE_NAME     "${MUSESCORE_NAME}-${MUSESCORE_VERSION_FULL}${git_date_string}")

else(MINGW OR MSVC)
    set(CPACK_PACKAGE_ICON "${PROJECT_SOURCE_DIR}/mscore/data/mscore.bmp")
    set(CPACK_STRIP_FILES "${MSCORE_OUTPUT_NAME}")
    set(CPACK_SOURCE_STRIP_FILES "")
    set(CPACK_PACKAGE_EXECUTABLES "mscore" "MuseScore")
    set(CPACK_SOURCE_PACKAGE_FILE_NAME "mscore")
    set(CPACK_PACKAGE_FILE_NAME "${CPACK_SOURCE_PACKAGE_FILE_NAME}-${MUSESCORE_VERSION_FULL}${git_date_string}")
endif(MINGW OR MSVC)

set(CPACK_DEBIAN_PACKAGE_NAME         "mscore")
set(CPACK_DEBIAN_PACKAGE_VERSION      "${MUSESCORE_VERSION_FULL}${git_date_string}")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER   "tsmithe@ubuntu.com")
set(CPACK_DEBIAN_PACKAGE_SECTION      "devel")
set(CPACK_DEBIAN_PACKAGE_PRIORITY     "optional")
set(CPACK_DEBIAN_PACKAGE_RECOMMENDS   "")
set(CPACK_DEBIAN_PACKAGE_SUGGESTS     "")

set(CPACK_PACKAGE_CONTACT "info@musescore.org")

if (MINGW OR MSVC)
    set(CPACK_GENERATOR "WIX")
else (MINGW OR MSVC)
    if (NOT APPLE)
        set(CPACK_GENERATOR "DEB;TBZ2")
        set(CPACK_DEB "on")
    endif (NOT APPLE)
endif (MINGW OR MSVC)

if (CPACK_DEB)
    find_program(DPKG_EXECUTABLE dpkg PATHS ENV PATH)
    if (DPKG_EXECUTABLE)
        set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS "ON")
        execute_process(
            COMMAND "${DPKG_EXECUTABLE} --print-architecture"
            OUTPUT_VARIABLE dpkg_architecture
            OUTPUT_STRIP_TRAILING_WHITESPACE)
        set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "${dpkg_architecture}")
    endif (DPKG_EXECUTABLE)
endif (CPACK_DEB)

include (CPack)
