name: CI_Linux

on:
  pull_request:
    branches:
    - 3.x
    - my/3.x
  schedule:
    - cron: '0 4 * * *'  
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode: devel_build, nightly_build, testing_build, stable_build'
        required: true
        default: 'devel_build'  

jobs:
  build:
    runs-on: ubuntu-16.04
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.5.0
      with:
        access_token: ${{ github.token }}
    - name: Clone repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 3
    - name: "Configure workflow"
      run: |
        sudo bash ./build/ci/tools/make_build_mode_env.sh -e ${{ github.event_name }} -m ${{ github.event.inputs.build_mode }}
        BUILD_MODE=$(cat ./build.artifacts/env/build_mode.env)

        DO_PUBLISH='false'
        if [ "$BUILD_MODE" != "devel_build" ]; then 
          DO_PUBLISH='true'
          if [ -z "${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }}" ]; then 
            echo "warning: not set OSUOSL_SSH_ENCRYPT_SECRET, publish disabled" 
            DO_PUBLISH='false'
          fi  
        fi

        echo "::set-env name=DO_PUBLISH::$DO_PUBLISH"
        echo "DO_PUBLISH: $DO_PUBLISH"

    - name: Setup environment
      run: |
        sudo bash ./build/ci/linux/setup.sh
    - name: Build
      run: |
        T_ID=${{ secrets.TELEMETRY_TRACK_ID }}; if [ -z "$T_ID" ]; then T_ID=""; fi
        sudo bash ./build/ci/linux/build.sh -n ${{ github.run_id }} --telemetry $T_ID
    # - name: Run mtests 
    #   run: |
    #     sudo bash ./build/ci/linux/runmtests.sh
    - name: Package 
      run: |
        sudo bash ./build/ci/linux/package.sh
    - name: Checksum 
      run: |
        sudo bash ./build/ci/tools/checksum.sh
    - name: Publish package
      if: env.DO_PUBLISH == 'true'
      run: |
       sudo bash ./build/ci/linux/publish.sh -s ${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }} 
    - name: Upload artifacts on GitHub
      uses: actions/upload-artifact@v2
      with:
        name: MuseScore_${{ github.run_id }}
        path: ./build.artifacts/    
