name: CI_Linux_ARM MU4

on:
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode: devel_build, nightly_build, testing_build, stable_build'
        required: true
        default: 'devel_build'
      publish:
        description: 'Publish to FTP: on - publish'
        required: false
        default: 'off'
      sentry_project:
        description: 'Upload symbols and dumps to Sentry (choose a project): editor, sandbox'
        required: false
        default: ''  

jobs:
  build_armhf:
    runs-on: ubuntu-22.04
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}
    - name: Clone repository (default)
      uses: actions/checkout@v3
      if: ${{ github.event_name != 'schedule' || github.event.schedule == '0 3 */1 */1 *' }}
    - name: Clone repository (4.0.2)
      uses: actions/checkout@v3
      if: ${{ github.event_name == 'schedule' && github.event.schedule == '0 5 */1 */1 *' }}
      with:
        ref: 4.0.2
    - name: setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: "Configure workflow"
      env:
        pull_request_title: ${{ github.event.pull_request.title }}
      run: |
        sudo bash ./build/ci/tools/make_build_mode_env.sh -e ${{ github.event_name }} -m ${{ github.event.inputs.build_mode }}
        BUILD_MODE=$(cat ./build.artifacts/env/build_mode.env)

        sudo bash ./build/ci/tools/make_build_number.sh
        BUILD_NUMBER=$(cat ./build.artifacts/env/build_number.env)

        DO_PUBLISH='false'
        if [[ "${{ github.event.inputs.publish }}" == "on" || "$BUILD_MODE" == "nightly_build" ]]; then 
          DO_PUBLISH='true'
          if [ -z "${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }}" ]; then 
            echo "warning: not set OSUOSL_SSH_ENCRYPT_SECRET, publish disabled" 
            DO_PUBLISH='false'
          fi  
        fi

        DO_BUILD='true'
        if [ "$BUILD_MODE" == "nightly_build" ]; then 
          if [ "${{ github.repository }}" != "musescore/MuseScore" ]; then 
            DO_BUILD='false'
          fi
        fi

        DO_PLACEHOLDER_TRANSLATIONS='false'
        if [[ "$DO_BUILD" == "true" ]]; then
          if [[ "$BUILD_MODE" == "nightly_build" || "$BUILD_MODE" == "devel_build" ]]; then
            DO_PLACEHOLDER_TRANSLATIONS='true'
          fi
        fi

        DO_UPLOAD_SYMBOLS='false'
        SENTRY_PROJECT=${{ github.event.inputs.sentry_project }}
        SENTRY_URL=""
        if [ "$SENTRY_PROJECT" == "editor" ] && [ ${{ secrets.SENTRY_SERVER_MU3_KEY }} != 0 ]; then 
          DO_UPLOAD_SYMBOLS='true'
          SENTRY_URL=https://sentry.musescore.org/api/2/minidump/?sentry_key=${{ secrets.SENTRY_SERVER_MU3_KEY }}
        fi

        if [ "$SENTRY_PROJECT" == "sandbox" ] && [ ${{ secrets.SENTRY_SERVER_SANDBOX_KEY }} != 0 ]; then 
          DO_UPLOAD_SYMBOLS='true'
          SENTRY_URL=https://sentry.musescore.org/api/3/minidump/?sentry_key=${{ secrets.SENTRY_SERVER_SANDBOX_KEY }}
        fi

        if [ $DO_BUILD == 'false' ]; then
          DO_UPLOAD_SYMBOLS='false'
          DO_PUBLISH='false'
        fi

        ADD_INFO="_${GITHUB_REF#refs/heads/}"
        if [ "${{ github.event_name }}" == "schedule" ] && [ "${{ github.event.schedule }}" == "0 5 */1 */1 *" ]; then ADD_INFO="_4.0.2"; fi
        if [ "${{ github.event_name }}" == "pull_request" ]; then ADD_INFO="_${{ github.event.pull_request.number }}_${pull_request_title}"; fi
        UPLOAD_ARTIFACT_NAME="$(tr '":<>|*?/\\' '_' <<<"MU4_${BUILD_NUMBER}_Lin_armv7l${ADD_INFO}")"

        echo "github.repository: ${{ github.repository }}"
        echo "BUILD_MODE=$BUILD_MODE" >> $GITHUB_ENV
        echo "BUILD_MODE: $BUILD_MODE"
        echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
        echo "BUILD_NUMBER: $BUILD_NUMBER"
        echo "DO_BUILD=$DO_BUILD" >> $GITHUB_ENV
        echo "DO_BUILD: $DO_BUILD"
        echo "DO_PLACEHOLDER_TRANSLATIONS=$DO_PLACEHOLDER_TRANSLATIONS" >> $GITHUB_ENV
        echo "DO_PLACEHOLDER_TRANSLATIONS: $DO_PLACEHOLDER_TRANSLATIONS"
        echo "DO_PUBLISH=$DO_PUBLISH" >> $GITHUB_ENV
        echo "DO_PUBLISH: $DO_PUBLISH"
        echo "DO_UPLOAD_SYMBOLS=$DO_UPLOAD_SYMBOLS" >> $GITHUB_ENV
        echo "DO_UPLOAD_SYMBOLS: $DO_UPLOAD_SYMBOLS"
        echo "SENTRY_PROJECT=$SENTRY_PROJECT" >> $GITHUB_ENV
        echo "SENTRY_PROJECT: $SENTRY_PROJECT"
        echo "SENTRY_URL=$SENTRY_URL" >> $GITHUB_ENV
        echo "SENTRY_URL: $SENTRY_URL"
        echo "UPLOAD_ARTIFACT_NAME=$UPLOAD_ARTIFACT_NAME" >> $GITHUB_ENV
        echo "UPLOAD_ARTIFACT_NAME: $UPLOAD_ARTIFACT_NAME"

    - name: Setup, Generate, Update, Build the AppImage
      if: env.DO_BUILD == 'true'
      run: |
        YT_API_KEY=${{ secrets.YOUTUBE_API_KEY }}; if [ -z "$YT_API_KEY" ]; then YT_API_KEY="''"; fi
        C_URL=${SENTRY_URL}; if [ -z "$C_URL" ]; then C_URL="''"; fi
        sudo docker run -i -v "${PWD}:/MuseScore" "arm32v7/ubuntu:bionic" /bin/bash -c "cd /MuseScore && \
        bash /MuseScore/build/ci/linux/setup-arm.sh --arch armv7l && \
        bash /MuseScore/build/ci/translation/run_lrelease.sh && \
        bash /MuseScore/build/ci/linux/build.sh -n ${{ env.BUILD_NUMBER }} --youtube_api_key $YT_API_KEY --crash_log_url $C_URL --arch armv7l && \
        bash ./build/ci/linux/dumpsyms.sh && \
        bash /MuseScore/build/ci/linux/package.sh --arch armv7l && \
        bash /MuseScore/build/ci/tools/checksum.sh"
    - name: Upload dump symbols
      if: env.DO_UPLOAD_SYMBOLS == 'true'
      run: |
        sudo bash ./build/ci/tools/sentry_syms_upload.sh -t ${{ secrets.SENTRY_AUTH_TOKEN }} -p ${SENTRY_PROJECT}
    - name: Publish package
      if: env.DO_PUBLISH == 'true'
      run: |
        sudo bash ./build/ci/tools/osuosl/publish.sh -s ${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }} --os linux --arch armv7l -v 4
    - name: Upload artifacts on GitHub
      if: env.DO_BUILD == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.UPLOAD_ARTIFACT_NAME }}
        path: ./build.artifacts/

  build_arm64:
    runs-on: ubuntu-22.04
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}
    - name: Clone repository (default)
      uses: actions/checkout@v3
      if: ${{ github.event_name != 'schedule' || github.event.schedule == '0 3 */1 */1 *' }}
    - name: Clone repository (4.0.2)
      uses: actions/checkout@v3
      if: ${{ github.event_name == 'schedule' && github.event.schedule == '0 5 */1 */1 *' }}
      with:
        ref: 4.0.2
    - name: setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: "Configure workflow"
      env:
        pull_request_title: ${{ github.event.pull_request.title }}
      run: |
        sudo bash ./build/ci/tools/make_build_mode_env.sh -e ${{ github.event_name }} -m ${{ github.event.inputs.build_mode }}
        BUILD_MODE=$(cat ./build.artifacts/env/build_mode.env)

        sudo bash ./build/ci/tools/make_build_number.sh
        BUILD_NUMBER=$(cat ./build.artifacts/env/build_number.env)

        DO_PUBLISH='false'
        if [[ "${{ github.event.inputs.publish }}" == "on" || "$BUILD_MODE" == "nightly_build" ]]; then 
          DO_PUBLISH='true'
          if [ -z "${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }}" ]; then 
            echo "warning: not set OSUOSL_SSH_ENCRYPT_SECRET, publish disabled" 
            DO_PUBLISH='false'
          fi  
        fi

        DO_BUILD='true'
        if [ "$BUILD_MODE" == "nightly_build" ]; then 
          if [ "${{ github.repository }}" != "musescore/MuseScore" ]; then 
            DO_BUILD='false'
          fi
        fi

        DO_PLACEHOLDER_TRANSLATIONS='false'
        if [[ "$DO_BUILD" == "true" ]]; then
          if [[ "$BUILD_MODE" == "nightly_build" || "$BUILD_MODE" == "devel_build" ]]; then
            DO_PLACEHOLDER_TRANSLATIONS='true'
          fi
        fi

        DO_UPLOAD_SYMBOLS='false'
        SENTRY_PROJECT=${{ github.event.inputs.sentry_project }}
        SENTRY_URL=""
        if [ "$SENTRY_PROJECT" == "editor" ] && [ ${{ secrets.SENTRY_SERVER_MU3_KEY }} != 0 ]; then 
          DO_UPLOAD_SYMBOLS='true'
          SENTRY_URL=https://sentry.musescore.org/api/2/minidump/?sentry_key=${{ secrets.SENTRY_SERVER_MU3_KEY }}
        fi

        if [ "$SENTRY_PROJECT" == "sandbox" ] && [ ${{ secrets.SENTRY_SERVER_SANDBOX_KEY }} != 0 ]; then 
          DO_UPLOAD_SYMBOLS='true'
          SENTRY_URL=https://sentry.musescore.org/api/3/minidump/?sentry_key=${{ secrets.SENTRY_SERVER_SANDBOX_KEY }}
        fi

        if [ $DO_BUILD == 'false' ]; then
          DO_UPLOAD_SYMBOLS='false'
          DO_PUBLISH='false'
        fi

        ADD_INFO="_${GITHUB_REF#refs/heads/}"
        if [ "${{ github.event_name }}" == "schedule" ] && [ "${{ github.event.schedule }}" == "0 5 */1 */1 *" ]; then ADD_INFO="_4.0.2"; fi
        if [ "${{ github.event_name }}" == "pull_request" ]; then ADD_INFO="_${{ github.event.pull_request.number }}_${pull_request_title}"; fi
        UPLOAD_ARTIFACT_NAME="$(tr '":<>|*?/\\' '_' <<<"MU4_${BUILD_NUMBER}_Lin_aarch64${ADD_INFO}")"

        echo "github.repository: ${{ github.repository }}"
        echo "BUILD_MODE=$BUILD_MODE" >> $GITHUB_ENV
        echo "BUILD_MODE: $BUILD_MODE"
        echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
        echo "BUILD_NUMBER: $BUILD_NUMBER"
        echo "DO_BUILD=$DO_BUILD" >> $GITHUB_ENV
        echo "DO_BUILD: $DO_BUILD"
        echo "DO_PLACEHOLDER_TRANSLATIONS=$DO_PLACEHOLDER_TRANSLATIONS" >> $GITHUB_ENV
        echo "DO_PLACEHOLDER_TRANSLATIONS: $DO_PLACEHOLDER_TRANSLATIONS"
        echo "DO_PUBLISH=$DO_PUBLISH" >> $GITHUB_ENV
        echo "DO_PUBLISH: $DO_PUBLISH"
        echo "DO_UPLOAD_SYMBOLS=$DO_UPLOAD_SYMBOLS" >> $GITHUB_ENV
        echo "DO_UPLOAD_SYMBOLS: $DO_UPLOAD_SYMBOLS"
        echo "SENTRY_PROJECT=$SENTRY_PROJECT" >> $GITHUB_ENV
        echo "SENTRY_PROJECT: $SENTRY_PROJECT"
        echo "SENTRY_URL=$SENTRY_URL" >> $GITHUB_ENV
        echo "SENTRY_URL: $SENTRY_URL"
        echo "UPLOAD_ARTIFACT_NAME=$UPLOAD_ARTIFACT_NAME" >> $GITHUB_ENV
        echo "UPLOAD_ARTIFACT_NAME: $UPLOAD_ARTIFACT_NAME"

    - name: Setup, Generate, Update, Build the AppImage
      if: env.DO_BUILD == 'true'
      run: |
        YT_API_KEY=${{ secrets.YOUTUBE_API_KEY }}; if [ -z "$YT_API_KEY" ]; then YT_API_KEY="''"; fi
        C_URL=${SENTRY_URL}; if [ -z "$C_URL" ]; then C_URL="''"; fi
        sudo docker run -i -v "${PWD}:/MuseScore" "arm64v8/ubuntu:bionic" /bin/bash -c "cd /MuseScore && \
        bash /MuseScore/build/ci/linux/setup-arm.sh --arch aarch64 && \
        bash /MuseScore/build/ci/translation/run_lrelease.sh && \
        bash /MuseScore/build/ci/linux/build.sh -n ${{ env.BUILD_NUMBER }} --youtube_api_key $YT_API_KEY --crash_log_url $C_URL --arch aarch64 && \
        bash ./build/ci/linux/dumpsyms.sh && \
        bash /MuseScore/build/ci/linux/package.sh --arch aarch64 && \
        bash /MuseScore/build/ci/tools/checksum.sh"
    - name: Upload dump symbols
      if: env.DO_UPLOAD_SYMBOLS == 'true'
      run: |
        sudo bash ./build/ci/tools/sentry_syms_upload.sh -t ${{ secrets.SENTRY_AUTH_TOKEN }} -p ${SENTRY_PROJECT}
    - name: Publish package
      if: env.DO_PUBLISH == 'true'
      run: |
        sudo bash ./build/ci/tools/osuosl/publish.sh -s ${{ secrets.OSUOSL_SSH_ENCRYPT_SECRET }} --os linux --arch aarch64 -v 4
    - name: Upload artifacts on GitHub
      if: env.DO_BUILD == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.UPLOAD_ARTIFACT_NAME }}
        path: ./build.artifacts/
