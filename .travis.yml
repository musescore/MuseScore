language: cpp
sudo: false

env:
  global:
    - "ARTIFACTS_AWS_REGION=us-east-1"
    - "ARTIFACTS_S3_BUCKET=vtest.musescore.org"
    - secure: "lVj+9BBtJIjW3CwfXstvNyYVn0AkXEwTyiPmp4BprcheP78WIqZNC0uG2RjG9MgyHbZkprE7zRdqR9YPWTitg+XYkkD6+jPHRO+PQFLARuiTAX9yhUO53yQQZC2wMkQ#+bFuZsFmz1rfAsPHx3bXeZAMsz+Qnh8D2yIqqV7qxwWw="
    - secure: "L+66yQZIZJTyIAfrG89ncKIkMAr4+UvaOZMsd420OSdnEH9kpdm5Kws8rG0VVLAtqhfQfi3K9DuC8Ub7IiXqil//h+I9WJ2LHKirWK0m/MkhTFC6hfi0uSnQCX/jud3Keewxf3ovgiKQvIw6VR37UC50YJM9+KhZKtsNYhGAdos="

matrix:
  fast_finish: true
  allow_failures:
            - env: "JOB=AppImage_x86_64"
            - env: "JOB=AppImage_i686"
            - env: "JOB=AppImage_armhf"
  include:
    # 1st parallel build job - debug build on Ubuntu
    - env: "JOB=Tests"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - alsa
            - libsndfile1
            - wget
            - make
            - ant
            - curl
            - libasound2-dev
            - portaudio19-dev
            - libsndfile1-dev
            - zlib1g-dev
            - libfreetype6-dev
            - libfontconfig1-dev
            - lame
            - libmp3lame-dev
            - libegl1-mesa-dev
            - libegl1-mesa
            - ccache
            - libpulse-dev
      cache:
        directories:
          - $HOME/.ccache
      before_install:
        - "source build/travis/job1_Tests/environment.sh"
      install:
        - "./build/travis/job1_Tests/install.sh"
      before_script:
        - "./build/travis/job1_Tests/before_script.sh"
      script:
        - "./build/travis/job1_Tests/run_tests.sh"
      after_script:
        - 'ARTIFACTS_PATHS="$(ls vtest/html | tr "\n" ":")" artifacts upload'

    # 2nd parallel build job - portable Linux AppImage 64-bit x86 build on CentOS
    - env: "JOB=AppImage_x86_64"
      addons:
        apt:
          packages:
          - bsdtar
          - curl
          - zsync
      services:
        - docker
      script:
        - "[[ $APPIMAGE_BUILD_ARCHS == *x86_64* ]] && ./build/travis/job2_AppImage/build.sh --x86_64 --upload-branches $APPIMAGE_UPLOAD_BRANCHES || true"

    # 3rd parallel build job - portable Linux AppImage 32-bit x86 build on CentOS
    - env: "JOB=AppImage_i686"
      addons:
        apt:
          packages:
          - bsdtar
          - curl
          - zsync
      services:
        - docker
      script:
        - "[[ $APPIMAGE_BUILD_ARCHS == *i686* ]] && ./build/travis/job2_AppImage/build.sh --i686 --upload-branches $APPIMAGE_UPLOAD_BRANCHES || true"

    # 4th parallel build job - portable Linux AppImage armhf build on Debian crosscompiler
    - env: "JOB=AppImage_armhf"
      addons:
        apt:
          packages:
          - bsdtar
          - curl
          - zsync
      services:
        - docker
      before_script:
        - "sudo ./build/travis/job2_AppImage/set-binfmt-misc.sh"
      script:
        - "[[ $APPIMAGE_BUILD_ARCHS == *armhf* ]] && ./build/travis/job2_AppImage/build.sh --armhf --upload-branches $APPIMAGE_UPLOAD_BRANCHES || true"


before_install:
  - export CC=/usr/bin/gcc-4.9
  - export CXX=/usr/bin/g++-4.9
  - "mkdir qt5"
  - "wget -q -O qt5.zip http://utils.musescore.org.s3.amazonaws.com/qt542.zip"
  - "unzip -qq qt5.zip -d qt5"
  - "export PATH=`pwd`/qt5/bin:$PATH"
  - "export QT_PLUGIN_PATH=`pwd`/qt5/plugins"
  - "export QML2_IMPORT_PATH=`pwd`/qt5/qml"
before_script:
  #compatibility between ruby travis artefact and GO one
  - "export ARTIFACTS_KEY=$ARTIFACTS_AWS_ACCESS_KEY_ID"
  - "export ARTIFACTS_SECRET=$ARTIFACTS_AWS_SECRET_ACCESS_KEY"
  - "artifacts -v || curl -sL https://raw.githubusercontent.com/meatballhat/artifacts/master/install | bash"
  - "mkdir $HOME/software"
  - "export PATH=$PATH:$HOME/bin:$HOME/software/bin"
  - "make revision"
  - "make debug CPUS=2 PREFIX=$HOME/software"
  - "make installdebug CPUS=2 PREFIX=$HOME/software"
  - "cd build.debug/mtest"
  - "make -j2"
script:
  - "../../build/run_tests.sh"
after_script:
  - "export TRAVIS_SHORT_COMMIT=`echo $TRAVIS_COMMIT | cut -c 1-8`"
  - "export ARTIFACTS_TARGET_PATHS=$TRAVIS_SHORT_COMMIT"
  - export ARTIFACTS_PATHS=$(ls ../../vtest/html | tr "\n" ":")
  - "export ARTIFACTS_PERMISSIONS=public-read"
  - "export TRAVIS_BUILD_DIR=../../vtest/html"
  - "artifacts upload"
#notifications:
#  recipients:
#    - build@musescore.org
#  email:
#    on_success: change
#    on_failure: always
#  irc:
#    channels:
#      - "irc.freenode.net#musescore"
#    on_success: change
#    on_failure: change
#  webhooks:
#    # trigger Buildtime Trend Service to parse Travis CI log
#    - https://buildtimetrend.herokuapp.com/travis
