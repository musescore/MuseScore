#=============================================================================
#  Mscore
#  Linux Music Score Editor
#
#  Copyright (C) 2002-2007 by Werner Schweer and others
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License version 2.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#=============================================================================

$(warning DEPRECATION NOTICE. This method of compiling will soon be removed.)
$(warning )
$(warning Please use 'build.cmake' instead with these options:)
$(warning )
$(warning $    $$ ./build.cmake -G Xcode)
$(warning )
$(warning See https://github.com/musescore/MuseScore/pull/7531 for details.)
$(warning )

VERSION := $(cmake -P config.cmake | sed -n -e "s/^.*VERSION  *//p")
BUILD_NUMBER = ""
PREFIX=../applebuild
TELEMETRY_TRACK_ID=""
CRASH_REPORT_URL=""
MUSESCORE_BUILD_CONFIG="dev"
MUSESCORE_REVISION=""
BUILD_VST="OFF"
VST3_SDK_PATH=""
YOUTUBE_API_KEY=""

XCODEPROJ = mscore.xcodeproj

# Use xcpretty if installed
ifneq ($(strip $(shell which xcpretty)),)
  FORMATTER_START = set -o pipefail &&
  FORMATTER_END = | xcpretty
endif

release:
	@echo "Make release"; \
	mkdir build.release; \
	cd build.release; \
	cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" \
	      -DCMAKE_BUILD_TYPE=RELEASE \
	      -DCMAKE_BUILD_NUMBER="${BUILD_NUMBER}" \
	      -DMUSESCORE_BUILD_CONFIG="${MUSESCORE_BUILD_CONFIG}" \
	      -DMUSESCORE_REVISION="${MUSESCORE_REVISION}" \
	      -DTELEMETRY_TRACK_ID="${TELEMETRY_TRACK_ID}" \
	      -DYOUTUBE_API_KEY="${YOUTUBE_API_KEY}" \
	      .. -G Xcode; \
	xcodebuild -project ${XCODEPROJ} -target lrelease; \
	$(FORMATTER_START) xcodebuild -project ${XCODEPROJ} -configuration Release -target ALL_BUILD $(FORMATTER_END); \

debug:
	mkdir build.debug; \
      cd build.debug; \
      cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" \
            -DCMAKE_BUILD_TYPE=DEBUG \
            -DCMAKE_BUILD_NUMBER="${BUILD_NUMBER}" \
            .. -G Xcode; 			       \
      xcodebuild -project ${XCODEPROJ} -target lrelease; \
      $(FORMATTER_START) xcodebuild -project ${XCODEPROJ} -configuration Debug -target ALL_BUILD $(FORMATTER_END); \

xcode:
	mkdir build.xcode;              \
    cd build.xcode;                                  \
    cmake -DCMAKE_INSTALL_PREFIX=../build.xcode/src/main/Debug -DCMAKE_BUILD_TYPE=DEBUG \
          -DBUILD_TELEMETRY_MODULE=OFF \
          -DCMAKE_BUILD_NUMBER="${BUILD_NUMBER}"  \
          .. -G Xcode;                         \
    xcodebuild -project ${XCODEPROJ} -target lrelease;

lupdate:
	cd build.release; xcodebuild -project ${XCODEPROJ} -target lupdate;

lrelease:
	cd build.release;xcodebuild -project ${XCODEPROJ} -target lrelease;

revision:
	@git rev-parse --short=7 HEAD > local_build_revision.env

version:
	@echo ${VERSION}

install:
	cd build.release;   \
	$(FORMATTER_START) xcodebuild -project ${XCODEPROJ} -configuration Release -target install $(FORMATTER_END);

installdebug:
	cd build.debug; \
	$(FORMATTER_START) xcodebuild -project ${XCODEPROJ} -configuration Debug -target install $(FORMATTER_END);

package:
	build/package_mac;

ci:
	@echo "Make ci"; \
	mkdir build.release; \
	cd build.release; \
	cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" \
	      -DCMAKE_BUILD_TYPE=RELEASE \
	      -DCMAKE_BUILD_NUMBER="${BUILD_NUMBER}" \
	      -DMUSESCORE_BUILD_CONFIG="${MUSESCORE_BUILD_CONFIG}" \
	      -DMUSESCORE_REVISION="${MUSESCORE_REVISION}" \
	      -DTELEMETRY_TRACK_ID="${TELEMETRY_TRACK_ID}" \
	      -DYOUTUBE_API_KEY="${YOUTUBE_API_KEY}" \
	      -DCRASH_REPORT_URL="${CRASH_REPORT_URL}" \
	      .. -G Xcode; \
	xcodebuild -project ${XCODEPROJ} -target lrelease; \
	$(FORMATTER_START) xcodebuild -project ${XCODEPROJ} -configuration Release -target install $(FORMATTER_END);

#
# clean out of source build
#
clean:
	-rm -rf build.release build.debug build.xcode
	-rm -rf applebuild
