# Makefile.in generated by automake 1.15 from Makefile.am.
# splash/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/poppler
pkgincludedir = $(includedir)/poppler
pkglibdir = $(libdir)/poppler
pkglibexecdir = $(libexecdir)/poppler
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin14.5.0
host_triplet = x86_64-apple-darwin14.5.0
subdir = splash
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/define-dir.m4 $(top_srcdir)/m4/gtk-doc.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/introspection.m4 \
	$(top_srcdir)/m4/libjpeg.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am \
	$(am__poppler_splash_include_HEADERS_DIST) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/poppler/poppler-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libsplash_la_LIBADD =
am_libsplash_la_OBJECTS = libsplash_la-Splash.lo \
	libsplash_la-SplashBitmap.lo libsplash_la-SplashClip.lo \
	libsplash_la-SplashFTFont.lo \
	libsplash_la-SplashFTFontEngine.lo \
	libsplash_la-SplashFTFontFile.lo libsplash_la-SplashFont.lo \
	libsplash_la-SplashFontEngine.lo \
	libsplash_la-SplashFontFile.lo \
	libsplash_la-SplashFontFileID.lo libsplash_la-SplashPath.lo \
	libsplash_la-SplashPattern.lo libsplash_la-SplashScreen.lo \
	libsplash_la-SplashState.lo libsplash_la-SplashT1Font.lo \
	libsplash_la-SplashT1FontEngine.lo \
	libsplash_la-SplashT1FontFile.lo libsplash_la-SplashXPath.lo \
	libsplash_la-SplashXPathScanner.lo
libsplash_la_OBJECTS = $(am_libsplash_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/poppler
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libsplash_la_SOURCES)
DIST_SOURCES = $(libsplash_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__poppler_splash_include_HEADERS_DIST = Splash.h SplashBitmap.h \
	SplashClip.h SplashErrorCodes.h SplashFTFont.h \
	SplashFTFontEngine.h SplashFTFontFile.h SplashFont.h \
	SplashFontEngine.h SplashFontFile.h SplashFontFileID.h \
	SplashGlyphBitmap.h SplashMath.h SplashPath.h SplashPattern.h \
	SplashScreen.h SplashState.h SplashT1Font.h \
	SplashT1FontEngine.h SplashT1FontFile.h SplashTypes.h \
	SplashXPath.h SplashXPathScanner.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(poppler_splash_includedir)"
HEADERS = $(poppler_splash_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/Hipapa/Desktop/poppler-0.38.0/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /Users/Hipapa/Desktop/poppler-0.38.0/missing autoconf
AUTOHEADER = ${SHELL} /Users/Hipapa/Desktop/poppler-0.38.0/missing autoheader
AUTOMAKE = ${SHELL} /Users/Hipapa/Desktop/poppler-0.38.0/missing automake-1.15
AWK = awk
CAIRO_CFLAGS = 
CAIRO_FEATURE = #undef POPPLER_HAS_CAIRO
CAIRO_LIBS = 
CAIRO_REQ = 
CAIRO_VERSION = 1.10.0
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -fPIC -Wall -Woverloaded-virtual -Wnon-virtual-dtor -Wcast-align -fno-exceptions  -fno-common -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FONTCONFIG_CFLAGS = -I/opt/local/include -I/opt/local/include/freetype2 -I/opt/local/include -I/opt/local/include/libpng16 -I/opt/local/include -I/opt/local/include/freetype2 
FONTCONFIG_LIBS = -L/opt/local/lib -lfontconfig -lfreetype 
FREETYPE_CFLAGS = -I/opt/local/include/freetype2 
FREETYPE_CONFIG = 
FREETYPE_LIBS = -L/opt/local/lib -lfreetype 
GLIB_MKENUMS = 
GLIB_REQ = 
GLIB_REQUIRED = 
GREP = /usr/bin/grep
GTKDOC_CHECK = 
GTKDOC_CHECK_PATH = 
GTKDOC_DEPS_CFLAGS = -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include 
GTKDOC_DEPS_LIBS = -L/opt/local/lib -lgobject-2.0 -lglib-2.0 -lintl 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
GTK_TEST_CFLAGS = 
GTK_TEST_LIBS = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTROSPECTION_CFLAGS = 
INTROSPECTION_COMPILER = 
INTROSPECTION_GENERATE = 
INTROSPECTION_GIRDIR = 
INTROSPECTION_LIBS = 
INTROSPECTION_MAKEFILE = 
INTROSPECTION_SCANNER = 
INTROSPECTION_TYPELIBDIR = 
LCMS_CFLAGS = -I/opt/local/include 
LCMS_LIBS = -L/opt/local/lib -llcms2 
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LIBCURL_CFLAGS = 
LIBCURL_LIBS = 
LIBICONV = -liconv
LIBJPEG_CFLAGS = 
LIBJPEG_LIBS = 
LIBOBJS = 
LIBOPENJPEG_CFLAGS = -I/opt/local/include/openjpeg-1.5 
LIBOPENJPEG_LIBS = -L/opt/local/lib -lopenjpeg 
LIBPNG_CFLAGS = -I/opt/local/include/libpng16 
LIBPNG_LIBS = -L/opt/local/lib -lpng16 
LIBS = 
LIBTIFF_CFLAGS = 
LIBTIFF_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/Hipapa/Desktop/poppler-0.38.0/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = .././install-sh -c -d
MOCQT4 = 
MOCQT42 = 
MOCQT5 = 
MOCQT52 = 
NM = /opt/local/bin/nm
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = poppler
PACKAGE_BUGREPORT = https://bugs.freedesktop.org/enter_bug.cgi?product=poppler
PACKAGE_NAME = poppler
PACKAGE_STRING = poppler 0.38.0
PACKAGE_TARNAME = poppler
PACKAGE_URL = 
PACKAGE_VERSION = 0.38.0
PATH_SEPARATOR = :
PC_REQUIRES = 
PC_REQUIRES_PRIVATE = Requires.private: poppler = 0.38.0
PDFTOCAIRO_CFLAGS = 
PDFTOCAIRO_LIBS = 
PKG_CONFIG = /opt/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POPPLER_DATADIR = /usr/share/poppler
POPPLER_GLIB_CFLAGS = 
POPPLER_GLIB_DISABLE_DEPRECATED = 
POPPLER_GLIB_DISABLE_SINGLE_INCLUDES = 
POPPLER_GLIB_LIBS = 
POPPLER_MAJOR_VERSION = 0
POPPLER_MICRO_VERSION = 0
POPPLER_MINOR_VERSION = 38
POPPLER_QT4_CFLAGS = 
POPPLER_QT4_CXXFLAGS = 
POPPLER_QT4_LIBS = 
POPPLER_QT4_TEST_CFLAGS = 
POPPLER_QT4_TEST_LIBS = 
POPPLER_QT5_CFLAGS = 
POPPLER_QT5_CXXFLAGS = 
POPPLER_QT5_LIBS = 
POPPLER_QT5_TEST_CFLAGS = 
POPPLER_QT5_TEST_LIBS = 
POPPLER_VERSION = 0.38.0
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -D_THREAD_SAFE -pthread
PTHREAD_LIBS = 
QTCHOOSER = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TESTDATADIR = /Users/Hipapa/Desktop/poppler-0.38.0/testfiles
VERSION = 0.38.0
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ZLIB_LIBS = 
abs_builddir = /Users/Hipapa/Desktop/poppler-0.38.0/splash
abs_srcdir = /Users/Hipapa/Desktop/poppler-0.38.0/splash
abs_top_builddir = /Users/Hipapa/Desktop/poppler-0.38.0
abs_top_srcdir = /Users/Hipapa/Desktop/poppler-0.38.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
auto_import_flags = 
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin14.5.0
build_alias = 
build_cpu = x86_64
build_os = darwin14.5.0
build_vendor = apple
builddir = .
create_shared_lib = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin14.5.0
host_alias = 
host_cpu = x86_64
host_os = darwin14.5.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/Hipapa/Desktop/poppler-0.38.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
win32_libs = 
noinst_LTLIBRARIES = libsplash.la
poppler_splash_includedir = $(includedir)/poppler/splash
poppler_splash_include_HEADERS = \
	Splash.h				\
	SplashBitmap.h				\
	SplashClip.h				\
	SplashErrorCodes.h			\
	SplashFTFont.h				\
	SplashFTFontEngine.h			\
	SplashFTFontFile.h			\
	SplashFont.h				\
	SplashFontEngine.h			\
	SplashFontFile.h			\
	SplashFontFileID.h			\
	SplashGlyphBitmap.h			\
	SplashMath.h				\
	SplashPath.h				\
	SplashPattern.h				\
	SplashScreen.h				\
	SplashState.h				\
	SplashT1Font.h				\
	SplashT1FontEngine.h			\
	SplashT1FontFile.h			\
	SplashTypes.h				\
	SplashXPath.h				\
	SplashXPathScanner.h

libsplash_la_SOURCES = \
	Splash.cc				\
	SplashBitmap.cc				\
	SplashClip.cc				\
	SplashFTFont.cc				\
	SplashFTFontEngine.cc			\
	SplashFTFontFile.cc			\
	SplashFont.cc				\
	SplashFontEngine.cc			\
	SplashFontFile.cc			\
	SplashFontFileID.cc			\
	SplashPath.cc				\
	SplashPattern.cc			\
	SplashScreen.cc				\
	SplashState.cc				\
	SplashT1Font.cc				\
	SplashT1FontEngine.cc			\
	SplashT1FontFile.cc			\
	SplashXPath.cc				\
	SplashXPathScanner.cc


# SplashBitmap includes JpegWriter.h, TiffWriter.h, PNGWriter.h
#libjpeg_includes = $(LIBJPEG_CFLAGS)
#libtiff_includes = $(LIBTIFF_CFLAGS)
libpng_includes = $(LIBPNG_CFLAGS)
libsplash_la_CPPFLAGS = \
	-I$(top_srcdir)				\
	-I$(top_srcdir)/goo			\
	$(libjpeg_includes)			\
	$(libtiff_includes)			\
	$(libpng_includes)			\
	$(FREETYPE_CFLAGS)

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign splash/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign splash/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libsplash.la: $(libsplash_la_OBJECTS) $(libsplash_la_DEPENDENCIES) $(EXTRA_libsplash_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libsplash_la_OBJECTS) $(libsplash_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libsplash_la-Splash.Plo
include ./$(DEPDIR)/libsplash_la-SplashBitmap.Plo
include ./$(DEPDIR)/libsplash_la-SplashClip.Plo
include ./$(DEPDIR)/libsplash_la-SplashFTFont.Plo
include ./$(DEPDIR)/libsplash_la-SplashFTFontEngine.Plo
include ./$(DEPDIR)/libsplash_la-SplashFTFontFile.Plo
include ./$(DEPDIR)/libsplash_la-SplashFont.Plo
include ./$(DEPDIR)/libsplash_la-SplashFontEngine.Plo
include ./$(DEPDIR)/libsplash_la-SplashFontFile.Plo
include ./$(DEPDIR)/libsplash_la-SplashFontFileID.Plo
include ./$(DEPDIR)/libsplash_la-SplashPath.Plo
include ./$(DEPDIR)/libsplash_la-SplashPattern.Plo
include ./$(DEPDIR)/libsplash_la-SplashScreen.Plo
include ./$(DEPDIR)/libsplash_la-SplashState.Plo
include ./$(DEPDIR)/libsplash_la-SplashT1Font.Plo
include ./$(DEPDIR)/libsplash_la-SplashT1FontEngine.Plo
include ./$(DEPDIR)/libsplash_la-SplashT1FontFile.Plo
include ./$(DEPDIR)/libsplash_la-SplashXPath.Plo
include ./$(DEPDIR)/libsplash_la-SplashXPathScanner.Plo

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libsplash_la-Splash.lo: Splash.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-Splash.lo -MD -MP -MF $(DEPDIR)/libsplash_la-Splash.Tpo -c -o libsplash_la-Splash.lo `test -f 'Splash.cc' || echo '$(srcdir)/'`Splash.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-Splash.Tpo $(DEPDIR)/libsplash_la-Splash.Plo
#	$(AM_V_CXX)source='Splash.cc' object='libsplash_la-Splash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-Splash.lo `test -f 'Splash.cc' || echo '$(srcdir)/'`Splash.cc

libsplash_la-SplashBitmap.lo: SplashBitmap.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashBitmap.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashBitmap.Tpo -c -o libsplash_la-SplashBitmap.lo `test -f 'SplashBitmap.cc' || echo '$(srcdir)/'`SplashBitmap.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashBitmap.Tpo $(DEPDIR)/libsplash_la-SplashBitmap.Plo
#	$(AM_V_CXX)source='SplashBitmap.cc' object='libsplash_la-SplashBitmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashBitmap.lo `test -f 'SplashBitmap.cc' || echo '$(srcdir)/'`SplashBitmap.cc

libsplash_la-SplashClip.lo: SplashClip.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashClip.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashClip.Tpo -c -o libsplash_la-SplashClip.lo `test -f 'SplashClip.cc' || echo '$(srcdir)/'`SplashClip.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashClip.Tpo $(DEPDIR)/libsplash_la-SplashClip.Plo
#	$(AM_V_CXX)source='SplashClip.cc' object='libsplash_la-SplashClip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashClip.lo `test -f 'SplashClip.cc' || echo '$(srcdir)/'`SplashClip.cc

libsplash_la-SplashFTFont.lo: SplashFTFont.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashFTFont.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashFTFont.Tpo -c -o libsplash_la-SplashFTFont.lo `test -f 'SplashFTFont.cc' || echo '$(srcdir)/'`SplashFTFont.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashFTFont.Tpo $(DEPDIR)/libsplash_la-SplashFTFont.Plo
#	$(AM_V_CXX)source='SplashFTFont.cc' object='libsplash_la-SplashFTFont.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashFTFont.lo `test -f 'SplashFTFont.cc' || echo '$(srcdir)/'`SplashFTFont.cc

libsplash_la-SplashFTFontEngine.lo: SplashFTFontEngine.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashFTFontEngine.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashFTFontEngine.Tpo -c -o libsplash_la-SplashFTFontEngine.lo `test -f 'SplashFTFontEngine.cc' || echo '$(srcdir)/'`SplashFTFontEngine.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashFTFontEngine.Tpo $(DEPDIR)/libsplash_la-SplashFTFontEngine.Plo
#	$(AM_V_CXX)source='SplashFTFontEngine.cc' object='libsplash_la-SplashFTFontEngine.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashFTFontEngine.lo `test -f 'SplashFTFontEngine.cc' || echo '$(srcdir)/'`SplashFTFontEngine.cc

libsplash_la-SplashFTFontFile.lo: SplashFTFontFile.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashFTFontFile.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashFTFontFile.Tpo -c -o libsplash_la-SplashFTFontFile.lo `test -f 'SplashFTFontFile.cc' || echo '$(srcdir)/'`SplashFTFontFile.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashFTFontFile.Tpo $(DEPDIR)/libsplash_la-SplashFTFontFile.Plo
#	$(AM_V_CXX)source='SplashFTFontFile.cc' object='libsplash_la-SplashFTFontFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashFTFontFile.lo `test -f 'SplashFTFontFile.cc' || echo '$(srcdir)/'`SplashFTFontFile.cc

libsplash_la-SplashFont.lo: SplashFont.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashFont.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashFont.Tpo -c -o libsplash_la-SplashFont.lo `test -f 'SplashFont.cc' || echo '$(srcdir)/'`SplashFont.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashFont.Tpo $(DEPDIR)/libsplash_la-SplashFont.Plo
#	$(AM_V_CXX)source='SplashFont.cc' object='libsplash_la-SplashFont.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashFont.lo `test -f 'SplashFont.cc' || echo '$(srcdir)/'`SplashFont.cc

libsplash_la-SplashFontEngine.lo: SplashFontEngine.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashFontEngine.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashFontEngine.Tpo -c -o libsplash_la-SplashFontEngine.lo `test -f 'SplashFontEngine.cc' || echo '$(srcdir)/'`SplashFontEngine.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashFontEngine.Tpo $(DEPDIR)/libsplash_la-SplashFontEngine.Plo
#	$(AM_V_CXX)source='SplashFontEngine.cc' object='libsplash_la-SplashFontEngine.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashFontEngine.lo `test -f 'SplashFontEngine.cc' || echo '$(srcdir)/'`SplashFontEngine.cc

libsplash_la-SplashFontFile.lo: SplashFontFile.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashFontFile.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashFontFile.Tpo -c -o libsplash_la-SplashFontFile.lo `test -f 'SplashFontFile.cc' || echo '$(srcdir)/'`SplashFontFile.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashFontFile.Tpo $(DEPDIR)/libsplash_la-SplashFontFile.Plo
#	$(AM_V_CXX)source='SplashFontFile.cc' object='libsplash_la-SplashFontFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashFontFile.lo `test -f 'SplashFontFile.cc' || echo '$(srcdir)/'`SplashFontFile.cc

libsplash_la-SplashFontFileID.lo: SplashFontFileID.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashFontFileID.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashFontFileID.Tpo -c -o libsplash_la-SplashFontFileID.lo `test -f 'SplashFontFileID.cc' || echo '$(srcdir)/'`SplashFontFileID.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashFontFileID.Tpo $(DEPDIR)/libsplash_la-SplashFontFileID.Plo
#	$(AM_V_CXX)source='SplashFontFileID.cc' object='libsplash_la-SplashFontFileID.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashFontFileID.lo `test -f 'SplashFontFileID.cc' || echo '$(srcdir)/'`SplashFontFileID.cc

libsplash_la-SplashPath.lo: SplashPath.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashPath.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashPath.Tpo -c -o libsplash_la-SplashPath.lo `test -f 'SplashPath.cc' || echo '$(srcdir)/'`SplashPath.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashPath.Tpo $(DEPDIR)/libsplash_la-SplashPath.Plo
#	$(AM_V_CXX)source='SplashPath.cc' object='libsplash_la-SplashPath.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashPath.lo `test -f 'SplashPath.cc' || echo '$(srcdir)/'`SplashPath.cc

libsplash_la-SplashPattern.lo: SplashPattern.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashPattern.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashPattern.Tpo -c -o libsplash_la-SplashPattern.lo `test -f 'SplashPattern.cc' || echo '$(srcdir)/'`SplashPattern.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashPattern.Tpo $(DEPDIR)/libsplash_la-SplashPattern.Plo
#	$(AM_V_CXX)source='SplashPattern.cc' object='libsplash_la-SplashPattern.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashPattern.lo `test -f 'SplashPattern.cc' || echo '$(srcdir)/'`SplashPattern.cc

libsplash_la-SplashScreen.lo: SplashScreen.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashScreen.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashScreen.Tpo -c -o libsplash_la-SplashScreen.lo `test -f 'SplashScreen.cc' || echo '$(srcdir)/'`SplashScreen.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashScreen.Tpo $(DEPDIR)/libsplash_la-SplashScreen.Plo
#	$(AM_V_CXX)source='SplashScreen.cc' object='libsplash_la-SplashScreen.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashScreen.lo `test -f 'SplashScreen.cc' || echo '$(srcdir)/'`SplashScreen.cc

libsplash_la-SplashState.lo: SplashState.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashState.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashState.Tpo -c -o libsplash_la-SplashState.lo `test -f 'SplashState.cc' || echo '$(srcdir)/'`SplashState.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashState.Tpo $(DEPDIR)/libsplash_la-SplashState.Plo
#	$(AM_V_CXX)source='SplashState.cc' object='libsplash_la-SplashState.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashState.lo `test -f 'SplashState.cc' || echo '$(srcdir)/'`SplashState.cc

libsplash_la-SplashT1Font.lo: SplashT1Font.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashT1Font.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashT1Font.Tpo -c -o libsplash_la-SplashT1Font.lo `test -f 'SplashT1Font.cc' || echo '$(srcdir)/'`SplashT1Font.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashT1Font.Tpo $(DEPDIR)/libsplash_la-SplashT1Font.Plo
#	$(AM_V_CXX)source='SplashT1Font.cc' object='libsplash_la-SplashT1Font.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashT1Font.lo `test -f 'SplashT1Font.cc' || echo '$(srcdir)/'`SplashT1Font.cc

libsplash_la-SplashT1FontEngine.lo: SplashT1FontEngine.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashT1FontEngine.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashT1FontEngine.Tpo -c -o libsplash_la-SplashT1FontEngine.lo `test -f 'SplashT1FontEngine.cc' || echo '$(srcdir)/'`SplashT1FontEngine.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashT1FontEngine.Tpo $(DEPDIR)/libsplash_la-SplashT1FontEngine.Plo
#	$(AM_V_CXX)source='SplashT1FontEngine.cc' object='libsplash_la-SplashT1FontEngine.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashT1FontEngine.lo `test -f 'SplashT1FontEngine.cc' || echo '$(srcdir)/'`SplashT1FontEngine.cc

libsplash_la-SplashT1FontFile.lo: SplashT1FontFile.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashT1FontFile.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashT1FontFile.Tpo -c -o libsplash_la-SplashT1FontFile.lo `test -f 'SplashT1FontFile.cc' || echo '$(srcdir)/'`SplashT1FontFile.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashT1FontFile.Tpo $(DEPDIR)/libsplash_la-SplashT1FontFile.Plo
#	$(AM_V_CXX)source='SplashT1FontFile.cc' object='libsplash_la-SplashT1FontFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashT1FontFile.lo `test -f 'SplashT1FontFile.cc' || echo '$(srcdir)/'`SplashT1FontFile.cc

libsplash_la-SplashXPath.lo: SplashXPath.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashXPath.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashXPath.Tpo -c -o libsplash_la-SplashXPath.lo `test -f 'SplashXPath.cc' || echo '$(srcdir)/'`SplashXPath.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashXPath.Tpo $(DEPDIR)/libsplash_la-SplashXPath.Plo
#	$(AM_V_CXX)source='SplashXPath.cc' object='libsplash_la-SplashXPath.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashXPath.lo `test -f 'SplashXPath.cc' || echo '$(srcdir)/'`SplashXPath.cc

libsplash_la-SplashXPathScanner.lo: SplashXPathScanner.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsplash_la-SplashXPathScanner.lo -MD -MP -MF $(DEPDIR)/libsplash_la-SplashXPathScanner.Tpo -c -o libsplash_la-SplashXPathScanner.lo `test -f 'SplashXPathScanner.cc' || echo '$(srcdir)/'`SplashXPathScanner.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libsplash_la-SplashXPathScanner.Tpo $(DEPDIR)/libsplash_la-SplashXPathScanner.Plo
#	$(AM_V_CXX)source='SplashXPathScanner.cc' object='libsplash_la-SplashXPathScanner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsplash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsplash_la-SplashXPathScanner.lo `test -f 'SplashXPathScanner.cc' || echo '$(srcdir)/'`SplashXPathScanner.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-poppler_splash_includeHEADERS: $(poppler_splash_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(poppler_splash_include_HEADERS)'; test -n "$(poppler_splash_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(poppler_splash_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(poppler_splash_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(poppler_splash_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(poppler_splash_includedir)" || exit $$?; \
	done

uninstall-poppler_splash_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(poppler_splash_include_HEADERS)'; test -n "$(poppler_splash_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(poppler_splash_includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(poppler_splash_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-poppler_splash_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-poppler_splash_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-poppler_splash_includeHEADERS install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-poppler_splash_includeHEADERS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
