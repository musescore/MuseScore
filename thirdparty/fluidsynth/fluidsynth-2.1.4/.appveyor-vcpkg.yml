image:
  - Visual Studio 2019

build:
  parallel: true
  verbosity: detailed

configuration:
  - Release

environment:
  # update the vcpkg cache even if build fails
  APPVEYOR_SAVE_CACHE_ON_ERROR: true

  matrix:
      - platform: ARM
      - platform: x86
      - platform: x64

cache:
  - c:\Tools\vcpkg\installed

init:
  - set TARGET_PLATFORM=
  - if "%platform%"=="x86" ( set TARGET_PLATFORM=Win32)
  - if "%platform%"=="x64" ( set TARGET_PLATFORM=x64)
  - if "%platform%"=="ARM" ( set TARGET_PLATFORM=ARM)
  - echo %TARGET_PLATFORM%
  - echo %APPVEYOR_BUILD_WORKER_IMAGE%
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2019" ( set "generator=Visual Studio 16 2019" && set "toolset=v142" )
  - echo %generator%
  - echo %toolset%
  
install:
# make sure the latest version of git is installed
  - choco upgrade git ninja -y
  - ninja --version
  - cmake --version
# manually update vcpkg
  - cd "C:\Tools\vcpkg"
  - git pull
  - .\bootstrap-vcpkg.bat
  - cd %appveyor_build_folder%
  - vcpkg install glib:%platform%-windows || type C:\Tools\vcpkg\buildtrees\libffi\config-arm-windows-out.log

build_script:
  - mkdir build
  - cd build
  - cmake -Werror=dev -G "%generator%" -A %TARGET_PLATFORM% -T "%toolset%" -Denable-pkgconfig=0 -DCMAKE_TOOLCHAIN_FILE=c:/Tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_VERBOSE_MAKEFILE=1 -DNO_GUI=1 ..
  - cmake --build . --config Release # build libfluidsynth and fluidsynth exec
  - if not "%platform%"=="ARM" ( cmake --build . --config Release --target check ) # build and exec unittests, unless when cross-compiling

after_build:
  - 7z a fluidsynth-vcpkg-%platform%.zip %APPVEYOR_BUILD_FOLDER%\build\src\Release\*

artifacts:
  - path: build/fluidsynth-vcpkg-%platform%.zip
    name: FluidSynth
